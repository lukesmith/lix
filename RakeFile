COMPILE_TARGET = "debug"
require "BuildUtils.rb"


require 'rubygems'

require 'zip/zip'
require 'zip/zipfilesystem'

RESULTS_DIR = "results"
PRODUCT = "Lix"
COPYRIGHT = 'Copyright 2009 Luke Smith. All rights reserved.';
COMMON_ASSEMBLY_INFO = 'src/CommonAssemblyInfo.cs';
CLR_VERSION = "v3.5"
OUTPUT_PATH = "build"
ARTIFACTS_PATH = "#{OUTPUT_PATH}/artifacts"

desc "Compiles, unit tests"
task :all => [:default]

desc "**Default**, compiles and runs tests"
task :default => [:init, :compile, :unit_test]

task :init do
  puts "Performing Initialization..."
  puts "Creating folders..."
end

desc "Update the version information for the build"
task :version do
  builder = AsmInfoBuilder.new(get_version(), {'Product' => PRODUCT, 'Copyright' => COPYRIGHT})
  buildNumber = builder.buildnumber
  puts "The build number is #{buildNumber}"
  builder.write COMMON_ASSEMBLY_INFO
end

def get_version
  return ENV['BUILD_NUMBER'].to_s unless ENV['BUILD_NUMBER'].nil?
  return "1.0.0.0"
end 

desc "Compiles the app"
task :compile => [:version] do
  MSBuildRunner.compile :compilemode => COMPILE_TARGET, :solutionfile => 'src/Lix.sln', :clrversion => CLR_VERSION

  Dir.glob(File.join("src/*/bin/#{COMPILE_TARGET}", "Lix.*.{dll,pdb,xml}")){|file|
	copy(file, OUTPUT_PATH) if File.file?(file)
  }

  Dir.glob(File.join("libs/", "*.{dll,pdb,xml}")){|file|
	copy(file, OUTPUT_PATH) if File.file?(file)
  }
end

desc "Runs unit tests"
task :test => [:unit_test]

desc "Runs unit tests"
task :unit_test => :compile do
  Dir.chdir("src") do
    libdirs = File.join("**", "Lix.*.Tests")
    runner = MbUnitRunner.new :compilemode => COMPILE_TARGET, :source => 'src'
    
    Dir.glob(libdirs) {|assembly|
      puts "The build number is #{assembly}"
      Dir.chdir("..") do
        runner.executeTests [assembly]
      end
    }
  end
end

desc "Target used for the CI server"
task :ci => [:unit_test]